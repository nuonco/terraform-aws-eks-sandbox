Parameters:
  ProvisionerArn:
    Type: String
  PhoneHomeEndpoint:
    Type: String
Resources:
  # Role and policy that allows source account to provision sandbox.
  SandboxBootstrapRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: SandboxBootstrapRole
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              AWS: !Ref ProvisionerArn
  SandboxBootstrapPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: SandboxBootstrapPolicy
      Roles:
        - !Ref SandboxBootstrapRole
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - route53:ChangeResourceRecordSets
              - iam:CreatePolicyVersion
              - ec2:AllocateAddress
              - ec2:AssociateRouteTable
              - ec2:AttachInternetGateway
              - ec2:AuthorizeSecurityGroupEgress
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:DescribeSecurityGroupReferences
              - ec2:DescribeSecurityGroupRules
              - ec2:DescribeSecurityGroups
              - ec2:CreateInternetGateway
              - ec2:CreateLaunchTemplate
              - ec2:CreateNatGateway
              - ec2:CreateRoute
              - ec2:CreateRouteTable
              - ec2:CreateSecurityGroup
              - ec2:CreateSubnet
              - ec2:CreateTags
              - ec2:CreateVpc
              - ec2:DescribeAddresses
              - ec2:DescribeInternetGateways
              - ec2:DescribeLaunchTemplateVersions
              - ec2:DescribeLaunchTemplates
              - ec2:DescribeNatGateways
              - ec2:DescribeNetworkAcls
              - ec2:DescribeRouteTables
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeTags
              - ec2:DescribeVpcAttribute
              - ec2:DescribeVpcClassicLink
              - ec2:DescribeVpcClassicLinkDnsSupport
              - ec2:DescribeVpcs
              - ec2:ModifySubnetAttribute
              - ec2:ModifyVpcAttribute
              - ec2:RevokeSecurityGroupEgress
              - ec2:RunInstances
              - ecr:CreateRepository
              - ecr:DescribeRepositories
              - ecr:ListTagsForResource
              - ecr:TagResource
              - eks:CreateCluster
              - eks:CreateNodegroup
              - eks:DescribeCluster
              - eks:TagResource
              - eks:ListTagsForResource
              - eks:DescribeNodegroup
              - iam:AttachRolePolicy
              - iam:CreateOpenIDConnectProvider
              - iam:TagOpenIDConnectProvider
              - iam:CreatePolicy
              - iam:CreateRole
              - iam:CreateServiceLinkedRole
              - iam:GetOpenIDConnectProvider
              - iam:GetPolicy
              - iam:GetPolicyVersion
              - iam:GetRole
              - iam:GetRolePolicy
              - iam:ListAttachedRolePolicies
              - iam:ListRolePolicies
              - iam:PassRole
              - iam:PutRolePolicy
              - iam:TagPolicy
              - iam:TagRole
              - kms:CreateAlias
              - kms:CreateGrant
              - kms:CreateKey
              - kms:DescribeKey
              - kms:GetKeyPolicy
              - kms:GetKeyRotationStatus
              - kms:ListAliases
              - kms:ListResourceTags
              - kms:PutKeyPolicy
              - kms:TagResource
              - logs:CreateLogGroup
              - logs:DescribeLogGroups
              - logs:ListTagsLogGroup
              - logs:PutRetentionPolicy
              - logs:TagResource
              - route53:ChangeTagsForResource
              - route53:CreateHostedZone
              - route53:GetChange
              - route53:GetHostedZone
              - route53:ListResourceRecordSets
              - route53:ListTagsForResource
              - route53:TagResource
              - s3:GetObject
              - s3:ListBucket
              - s3:PutObject
            Resource: '*'

  # function that sends the ARN of the SandboxBootstrapRole to the source AWS account,
  # so it can assume the role and start provisioning.
  PhoneHomeFunction:
    Type: AWS::Lambda::Function
    Properties:
      Role: !GetAtt PhoneHomeExecutionRole.Arn
      Handler: index.handler
      Runtime: nodejs18.x
      Environment:
        Variables:
          SandboxBootstrapRoleArn: !GetAtt SandboxBootstrapRole.Arn
          PhoneHomeEndpoint: !Ref PhoneHomeEndpoint
      Code:
        ZipFile: !Sub |
          var res = require('cfn-response');
          exports.handler = function(e, ctx) {
            res.send(e, ctx, res.SUCCESS, {
              SandboxBootstrapRoleArn: process.env.SandboxBootstrapRoleArn,
              PhoneHomeEndpoint: process.env.PhoneHomeEndpoint
            });
          };
  PhoneHomeExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: PhoneHomeExecutionRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service: lambda.amazonaws.com
  PhoneHomeCustomResource:
    Type: Custom::PhoneHome
    Properties:
      ServiceToken: !GetAtt PhoneHomeFunction.Arn
